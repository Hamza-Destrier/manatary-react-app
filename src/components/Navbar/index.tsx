import React from "react";
import styles from "@/styles/pagelayout.module.scss";

import Link from "next/link";

const MENUS = [
  { title: "Work", link: "/work/" },
  { title: "Services", link: "/services/" },
  { title: "Blogs", link: "/blogs/" },
  { title: "Contact", link: "/contact/" },
];

const Navbar = ({
  handleNavBtnClick,
  menusContainerRef,
  isMenuExpanded,
}: {
  isMenuExpanded: boolean;
  handleNavBtnClick: React.MouseEventHandler<HTMLDivElement>;
  menusContainerRef: React.LegacyRef<HTMLDivElement>;
}) => {
  const fillStrokeColor = React.useMemo(() => {
    return isMenuExpanded ? "primary" : "white";
  }, [isMenuExpanded]);

  return (
    <div className={styles["navbar-wrapper"]}>
      <div className={styles["navbar-container"]}>
        <div className={styles["navbar-container__logo"]}>
          <Link href={"/"}>
            <LogoIcon color={fillStrokeColor} />
          </Link>
        </div>

        <div
          className={styles["navbar-container__menus"]}
          ref={menusContainerRef}
        >
          {MENUS.map(({ link, title }, i) => (
            <Link
              key={title + i}
              href={link}
              className={styles["navbar-container__menus__menu"]}
            >
              {title}
            </Link>
          ))}
        </div>

        <div
          className={styles["navbar-container__hamIcon"]}
          onClick={handleNavBtnClick}
        >
          <HamburgerIcon color={fillStrokeColor} />
        </div>
      </div>
    </div>
  );
};

function HamburgerIcon({ color }: { color: "white" | "primary" }) {
  const strokeColor = {
    white: "#fff",
    primary: "#0a3031",
  }[color];

  return (
    <svg
      width="51"
      height="19"
      viewBox="0 0 51 19"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      {[
        "M1 1.26459C21.1119 -0.601888 24.7687 8.26387 50 1.26459",
        "M1 8.26459C21.1119 6.39811 24.7687 15.2639 50 8.26459",
        "M1 15.2646C21.1119 13.3981 24.7687 22.2639 50 15.2646",
      ].map((p, i) => {
        return (
          <path key={i} d={p} stroke={strokeColor} stroke-linecap="round" />
        );
      })}
    </svg>
  );
}

function LogoIcon({ color }: { color: "white" | "primary" }) {
  const fillColor = {
    white: "#fff",
    primary: "#0a3031",
  }[color];

  return (
    <svg
      width="71"
      height="41"
      viewBox="0 0 71 41"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M70.7717 9.52659C70.7505 9.82928 70.7239 10.1355 70.6974 10.44C70.6159 11.3427 70.5133 12.2543 70.4088 13.1659C70.2265 14.7678 69.9451 16.3166 69.5769 17.7947C69.3203 19.0372 68.9609 20.1931 68.5219 21.2286C68.0299 22.388 67.4369 23.3952 66.7802 24.1935C66.7005 24.2926 66.6191 24.3864 66.5377 24.4785C66.4297 24.5989 66.3217 24.7121 66.212 24.8201C65.8987 25.1299 65.573 25.3936 65.2402 25.6043C64.9375 25.799 64.6278 25.9494 64.3144 26.0556C64.2897 26.0627 64.2667 26.0716 64.2437 26.0787C64.2437 26.0787 64.2401 26.0787 64.2383 26.0787C63.3356 26.4238 62.2771 26.638 61.1301 26.6911C61.1301 26.6911 61.1301 26.6911 61.1265 26.6911C60.4751 26.7212 59.7937 26.7 59.0998 26.6203C59.0998 26.6203 58.8998 26.5902 58.5351 26.5424H58.528C57.8005 26.4486 57.0837 26.2804 56.3951 26.0326C53.2603 24.9015 46.8154 20.6091 43.1814 13.3694C39.2607 5.55629 35.8356 5.34566 35.8356 5.34566C35.8356 5.34566 35.871 5.64833 35.8497 6.13334C35.6851 11.0896 34.4744 19.4762 28.7659 25.9193C35.5559 24.6236 41.3582 24.3864 43.7939 24.3493C44.3408 24.944 45.0276 25.583 45.8808 26.2256C24.1282 27.1973 10.8013 33.575 4.74227 37.3346C4.73165 37.3417 4.72103 37.347 4.70864 37.3541C2.23229 38.8941 0.979069 39.9897 0.871094 40.0853C1.43221 39.3897 2.02696 38.7259 2.64826 38.0904C2.65357 38.0851 2.65888 38.0798 2.66242 38.0763C3.73155 37.0001 4.93344 35.9717 6.25923 34.9928C9.46662 32.6262 13.3962 30.5605 17.9064 28.8453C17.9223 28.8382 17.94 28.8329 17.9559 28.8258C18.7419 28.5267 19.5455 28.2399 20.365 27.9638C20.3686 27.9638 21.6059 27.4593 21.6094 27.4593C21.6129 27.4593 21.6147 27.4575 21.6182 27.4558C22.1156 27.1761 22.6024 26.9017 23.1016 26.6221C31.336 19.8957 32.7999 9.48942 32.9415 3.88887C32.9415 3.87825 32.9415 3.86763 32.9415 3.85701C32.9999 1.49926 32.8229 0 32.8229 0C33.5079 0.242502 34.177 0.520405 34.8266 0.83017C39.089 2.85161 42.5778 6.23601 44.8665 10.4116C44.8665 10.4116 44.8683 10.4134 44.8683 10.4152C45.1002 10.8382 45.3197 11.2701 45.525 11.7073C47.3216 15.0634 49.4741 17.7805 52.2991 20.3223C52.6319 20.6233 52.9824 20.9029 53.3346 21.1791C53.5046 21.3153 53.678 21.4481 53.8533 21.5773C54.6197 22.1473 55.4127 22.6748 56.2322 23.1509C56.28 23.1792 56.3296 23.2076 56.3774 23.2341C56.3916 23.243 56.4075 23.2518 56.4234 23.2607C56.7403 23.4412 57.0606 23.6165 57.3828 23.7811C57.9935 24.0944 58.6537 24.305 59.3352 24.3829H59.3494C59.4697 24.3988 59.5883 24.4095 59.7069 24.4148C59.8875 24.4254 60.0645 24.4272 60.2433 24.4218C60.923 24.4024 61.5868 24.2714 62.2204 24.0431C62.2576 24.0307 62.293 24.0165 62.3302 24.0023C63.9374 23.3917 65.35 22.1561 66.3359 20.5153C66.4067 20.3984 66.4757 20.2781 66.5412 20.1542C67.0439 18.8833 67.4298 17.4707 67.6652 15.9679C66.7235 17.1627 65.6633 18.1982 64.5145 19.0373C62.7957 20.2976 60.8805 21.1206 58.875 21.4003C58.4502 21.4587 58.0218 21.4941 57.5917 21.503C57.5421 21.4623 57.4925 21.4216 57.443 21.3791C56.7173 20.7702 56.1083 20.1028 55.641 19.4001C56.5863 19.3329 57.5138 19.1718 58.4165 18.924C59.3901 18.6567 60.3335 18.292 61.238 17.8318C63.6719 16.5998 65.8137 14.7059 67.4599 12.3393C67.6174 12.1127 67.7697 11.8843 67.9183 11.6489C68.4122 10.8648 68.8547 10.0346 69.2371 9.16196C69.2778 9.06991 69.3167 8.97432 69.3574 8.88051C69.9681 7.42373 70.4159 5.8572 70.6673 4.20925C70.931 5.88375 70.908 7.67862 70.7717 9.52128V9.52659Z"
        fill={fillColor}
      />
    </svg>
  );
}

export default Navbar;
